<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        94FkoQAAAABJRU5ErkJggg==
</value>
  </data>
</root>